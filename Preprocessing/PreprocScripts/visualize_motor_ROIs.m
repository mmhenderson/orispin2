
function visualize_motor_ROIs(subj_FS,subnum,hemi,which_finger, which_atlas)
    % function to launch tksurfer and visualize the results of digit 
    % localizer (left versus right button presses) on inflated 
    % cortical mesh.
    % Assumes that you ran GLM analysis in FSL FEAT, and the results are
    % saved in a folder called AnalyzeDigitLocalizer.
    % Will also overlay a cortical segmentation generated by Freesurfer 
    % during recon-all (based on anatomical boundaries identified from 
    % cortical segmentation). If you don't want that, set
    % which_atlas='none'
    
    % Input subject name, hemisphere to look at, and which finger (left or
    % right) is of interest.
    
    % Once you open it, can use view>window>labels to see the names of all
    % the anatomically-defined areas. 
    %%
    
    if nargin<2
        subj_FS='CP';
        subnum=7;
        hemi='lh';
        which_finger='right';
%         which_finger='left';
%         which_atlas='Destrieux';
%         which_atlas='DKT';
        which_atlas='BA';
%         which_atlas='none';
        % can read about these different parcellations at:
        % surfer.nmr.mgh.harvard.edu/fswiki/CorticalParcellation
    end
    substr =  sprintf('S%02d',subnum);
    % this is a hard coded list of the match between subject inits and
    % numbers for this specific experiment.
    subinit_big = {'BX','BR','CI','CA','CH','AV','CP'};
    subnum_big = {'S01','S02','S03','S04','S05','S06','S07'};
    % make sure we are looking at the correct subject.
    if ~strcmp(subinit_big{strcmp(substr,subnum_big)}, subj_FS)
        error('check your subject number and initial match!')
    end
    
    if strcmp(which_finger,'l') || strcmp(which_finger,'left')
        copenumber=1;
    elseif strcmp(which_finger,'r') || strcmp(which_finger,'right')
        copenumber=2;
    else
        error('which_finger should be left or right')
    end
    
    % find my root directory - up a few dirs from where i am now
    mypath = pwd;
    filesepinds = find(mypath==filesep);
    nDirsUp = 2;
    exp_path = mypath(1:filesepinds(end-nDirsUp+1));

    % define the activation map i want to load (generated by FEAT)
    % this is either left finger>right or vice versa
    loc_subfolder = 'AnalyzeDigitLocalizer';
    overlay_folder = fullfile(exp_path,loc_subfolder,substr,'feats',...
        'AllSessionsFE.gfeat',sprintf('cope%d.feat',copenumber),'stats');
    overlay_file = fullfile(overlay_folder,'tstat1.nii.gz');
    if ~exist(overlay_file,'file')
        error('your digit localizer activation map does not exist yet, did you finish running feat for this subject?')
    end
    
     % get threshold (same method used in getMotorROIs.m)
    cd(overlay_folder)  
    % this is all copied from Find_t_thresh.m
    % get FE dof
    [~, my_FE_dof] = unix('fslstats tdof_t1 -M'); % gives the dof I need for fixed effects (which is the test I ran), output is a string    
    % make log p-stats map
    unix(['ttologp -logpout logp1 varcope1 cope1 ', num2str(str2num(my_FE_dof))]);
    % convert from log to p-value map
    unix(['fslmaths logp1 -exp p1']);    
    % do FDR on p-value map and get probability threshold
    [~,prob_thresh] = unix('fdr -i p1 -q 0.05');
    % go from my p-threshold back into my t-stat
    my_t = abs(tinv(str2num(prob_thresh(28:end)),str2num(my_FE_dof)));
    
    
    % define the registration file that's needed to let me project this map
    % into surface space for this subject.
    doreti_folder = '/mnt/neurocube/local/serenceslab/Doreti';
%     reg_file = fullfile(doreti_folder,'FUNC',subj_FS,'PreProc','REG','bbout.reg');
    reg_file = fullfile(exp_path,'DataPreproc',substr,'Func2Anat_auto.dat');
    if ~exist(reg_file,'file')
        error('your Func2Anat_auto.dat file (in preproc folder) is missing for this subject.');
    end
    
    % define the annotation file to show on the surface (segmented cortical
    % regions created during freesurfer's recon-all, which are based on
    % anatomical landmarks).
    if contains(which_atlas,'Dest')
        annot_file = fullfile(doreti_folder,'ANAT',subj_FS,'label',sprintf('%s.aparc.a2009s.annot',hemi));
    elseif strcmp(which_atlas,'DKT')
        annot_file = fullfile(doreti_folder,'ANAT',subj_FS,'label',sprintf('%s.aparc.annot',hemi));
    elseif strcmp(which_atlas,'BA')
        annot_file = fullfile(doreti_folder,'ANAT',subj_FS,'label',sprintf('%s.BA_exvivo.annot',hemi));
    else
        annot_file = '';
    end
    
    if ~isempty(annot_file) 
        if ~exist(annot_file,'file')
            error('your aparc.a2009s.annot file (in doreti folder) is missing for this subject.');
        end
         % launch tksurfer with the correct arguments
        unixcmd = ['tksurfer ', subj_FS, ' ', hemi, ' inflated -overlay ',...
            overlay_file, ' -overlay-reg ' reg_file, ' -annot ', annot_file, ' -fthresh ' sprintf('%.4f',my_t)];
        unix(unixcmd)
    else
         % launch tksurfer with the correct arguments
        unixcmd = ['tksurfer ', subj_FS, ' ', hemi, ' inflated -overlay ',...
            overlay_file, ' -overlay-reg ' reg_file, ' -fthresh ' sprintf('%.4f',my_t)];
        unix(unixcmd)
    end
    

end  



% $argv[2] inflated -overlay $bowtiedir/allbowtie.gfeat/cope3.feat/stats/tstat1.nii.gz -overlay $bowtiedir/allbowtie.gfeat/cope4.feat/stats/tstat1.nii.gz -overlay-reg FUNC/$argv[1]/PreProc/REG/bbout.reg -annotation $SUBJECTS_DIR/$argv[1]/label/$argv[2].retinotopy.annot -delink';
% 
% 
% 
% if ($#argv == 0) then
% 	echo " "
% 	echo "  visualize.ss <subj_id> <hemi> <stim> [<patch>]"
% 	echo "    Visualizes the retinotopy analysis results for subject <subj_id> and"
% 	echo "    hemisphere <hemi> (lh or rh), for stim type <stim> (l for left press or r for right press)."
% 	echo "    Optionally, a (flat) patch file name may be specified."
% 	echo "    FreeSurfer will look for this file under"
% 	echo "    ANAT/<subj_id>/<hemi>.<patchname>.patch. If you enter 'default' here, the assumed"
% 	echo "    filename will be <hemi>.occip.flat. "
% 	echo " " 
% else
% 	#if ( ! -d SCRIPTS/ ) then
% 	#    echo "ERROR: Directory SCRIPTS not found. Are you sure you are in your Doreti home directory?"
% 	#    exit
% 	#endif
% 
%     dir=($pwd)
% 	setenv ldir FUNC/$argv[1]/A/OUT/eccen
% 	setenv polardir FUNC/$argv[1]/A/OUT/polar
%     setenv bowtiedir FUNC/$argv[1]/A/OUT/bowtie
% 	setenv SUBJECTS_DIR ANAT
% 	setenv sbjdir ANAT/$argv[1]
% 	setenv retdir $PWD
% 	source $FREESURFER_HOME/SetUpFreeSurfer.csh
% 
% 	if ($#argv == 4) then
% 	    if ($argv[4] == default) then
% 		setenv patchname $argv[2].occip.flat.patch
% 	    else
% 		setenv patchname $argv[2].$argv[4].patch
% 	    endif
% 	else
% 	    setenv patchname 0
% 	endif
% 		
% 
% if ($argv[3] == bowtie) then
% 
% if ( -f $SUBJECTS_DIR/$argv[1]/label/$argv[2].retinotopy.annot ) then
%  echo 'exists'
% 
% 	tksurfer -$argv[1] $argv[2] inflated -overlay $bowtiedir/allbowtie.gfeat/cope3.feat/stats/tstat1.nii.gz -overlay $bowtiedir/allbowtie.gfeat/cope4.feat/stats/tstat1.nii.gz -overlay-reg FUNC/$argv[1]/PreProc/REG/bbout.reg -annotation $SUBJECTS_DIR/$argv[1]/label/$argv[2].retinotopy.annot -delink
% 
% else
% echo 'does not exist'
% 	tksurfer -$argv[1] $argv[2] inflated -overlay $bowtiedir/allbowtie.gfeat/cope3.feat/stats/tstat1.nii.gz -overlay $bowtiedir/allbowtie.gfeat/cope4.feat/stats/tstat1.nii.gz -overlay-reg FUNC/$argv[1]/PreProc/REG/bbout.reg -delink
% endif 
% 
% else
% 	if ($argv[3] == eccen) then
% 
% 	    #setenv flatzrot 110
% 	    #setenv flatscale 1.4
% 	    setenv offset 0.4
% 
% 	    setenv rgbname eccen
% 	    setenv fthresh 1.0
% 	    setenv fslope 10
% 	    setenv fmid 1.05
% 	    setenv angle_offset 0.22
% 	    setenv angle_cycles 1.0
% 	    setenv invphaseflag 0
% 	    setenv smoothsteps 0 #from default
% 	    setenv revphaseflag 1
% 
% 	else
% 	    setenv rgbname polar
% 	    #setenv fthresh 0.4
% 	    #setenv fslope 2
% 	    #setenv fmid 0.8
% 	    setenv fthresh 1.3
% 	    setenv fslope 10
% 	    setenv fmid 1.4
% 	    setenv angle_offset 0.5
% 	    setenv angle_cycles 2.0
% 	    #setenv angle_cycles 1.0 # set this for scanning with double-wedge stim	    
% 	    
% 	    if ($argv[2] == lh) then
% 		setenv revphaseflag 1
% 		setenv invphaseflag 1
% 	    else
% 		setenv revphaseflag 0
% 		setenv invphaseflag 0
% 	    endif
% 	    
% 	    setenv smoothsteps 1 #was 5
% 
% 	endif
% 	
% 	setenv usefdr 0.00
% 
% 	# tksurfer -$argv[1] $argv[2] inflated -tcl SCRIPTS/$argv[3]-views_nothresh.tcl
% 	tksurfer -$argv[1] $argv[2] inflated -tcl SCRIPTS/$argv[3]-views.tcl -delink
% 
% 
% 
% 
% endif
% 
% 	unsetenv angle_offset
% 	unsetenv angle_cycles
% 
% 	#setenv patchname patch
% 	setenv revpolarflag 0
% 	    
% 	setenv rgbname fs
% 	setenv fthresh 0.3
% 	setenv fslope 5.0
% 	setenv fmid 0.8
% 	setenv angle_offset 0.8
% 	setenv revphaseflag 1
% 
% 	# tksurfer -$name $hemi inflated -tcl fs-make.tcl
% 	# tksurfer -$name $hemi inflated -tcl fs-flat.tcl
% 
% endif
